@model IEnumerable<PublicVM>

<div id="form-div" class="row">

    <div class="col-lg-12">
        <p id="status-message">
            <span>
                Returning
                <span id="currentCount">@ViewData["currentRecordsCount"]</span> of @ViewData["allRecordsCount"] documents,
                <span id="currentLowYear">
                    @((int)DateTime.Now.Year - 1)
                </span> to
                <span id="currentHighYear">
                    @if (((IList<SelectListItem>)TempData["YearRange"]).Any())
                    {
                        @Html.Raw(((IList<SelectListItem>)TempData["YearRange"]).Last().Text)
                    }
                    else {
                        @DateTime.Now.Year
                    }
                </span><span id="currentSearchTerm"></span>
            </span>
        </p>
    </div>

    <form method="get" action="@Url.Action("Index")" data-otf-ajax="true" data-otf-target="#public_table" class="col-lg-12 main-form">
        <input id="search" type="hidden" name="folderId" value="@TempData["Folder_Id"]" />
        <div class="inner-form row">
            <div class="col-lg-12">
                <div class="row" style="height: 50px;">
                    <label class="hide col-lg-2" for="customDates" style="white-space: nowrap">
                        <br/>
                        Customize Date:
                        <input type="checkbox" name="customDates" id="customDates" value="customDates"/>
                    </label>

                    <div class="form-mid-half hide col-lg-4">
                        <div class="filter customDates row">
                            <!--Customize Start Range Date Range DD input-->
                            <label for="IssueDateMinRange" class="col-lg-12">Starting Issue Date:</label>
                            @Html.DropDownList("IssueYearMinRange", TempData["YearRange"] as List<SelectListItem>, "Year", new { @class = "datefield col-lg-5", type = "date", disabled = "disabled" })
                            <select id="startingMonth" name="IssueMonthMinRange" class="datefield col-lg-5">
                                @* should i do in html.dropdownlist style? *@
                                <option value="" selected>Month</option>
                                <option value="01">Jan</option>
                                <option value="02">Feb</option>
                                <option value="03">Mar</option>
                                <option value="04">Apr</option>
                                <option value="05">May</option>
                                <option value="06">Jun</option>
                                <option value="07">Jul</option>
                                <option value="08">Aug</option>
                                <option value="09">Sep</option>
                                <option value="10">Oct</option>
                                <option value="11">Nov</option>
                                <option value="12">Dece</option>
                            </select>
                        </div>
                    </div>

                    <div class="hide form-mid-half col-lg-4">
                        <div class="filter customDates row">
                            <!--Customize End Range Date Range DD input-->
                            <label for="IssueDateMaxRange" class="col-lg-12">Ending Issue Date:</label>
                            @Html.DropDownList("IssueYearMaxRange", TempData["YearRange"] as List<SelectListItem>, "Year", new { @class = "datefield col-lg-5", type = "date", disabled = "disabled" })
                            <select id="endingMonth" name="IssueMonthMaxRange" class="datefield col-lg-5">
                                <option value="" selected>Month</option>
                                <option value="01">Jan</option>
                                <option value="02">Feb</option>
                                <option value="03">Mar</option>
                                <option value="04">Apr</option>
                                <option value="05">May</option>
                                <option value="06">Jun</option>
                                <option value="07">Jul</option>
                                <option value="08">Aug</option>
                                <option value="09">Sep</option>
                                <option value="10">Oct</option>
                                <option value="11">Nov</option>
                                <option value="12">Dece</option>
                            </select>
                        </div>
                    </div>

                    <div class="right-form-side col-lg-2">
                        <br/>
                        <!--Reset/Clear button-->
                        @Ajax.ActionLink("Reset Search", "Index", new
                   {
                       folderId = TempData["Folder_Id"]
                   }, new AjaxOptions
                   {
                       HttpMethod = "GET",
                       InsertionMode = InsertionMode.ReplaceWith,
                       UpdateTargetId = "public_table",
                       OnComplete = "clearFields",
                       OnSuccess = "updateCurrentCount"
                   }, new { @class = "button", id = "clearButton" })
                    </div>


                </div>
            </div>

            <div class="col-lg-12">
                <div class="row lowerRowForm">
                    <label class="col-lg-4" for="fromYear" style="white-space: nowrap">
                        Records from:
                        <select id="fromYear" name="IssueYearMinRange">
                            @if (TempData["Role"] != null && (string)TempData["Role"] == "Admin")
                            {
                                <option value="-1" >one year from today</option>
                            }
                            else
                            {
                                <option value="-1" selected>one year from today</option>
                            }
                            
                            <option value="-2">two years from today</option>
                            <option value="-3">three years from today</option>
                            @if (TempData["Role"] != null && (string)TempData["Role"] == "Admin")
                            {
                                <option value="-100" selected>All</option>
                            }
                            else
                            {
                                <option value="-100">All</option>
                            }
                        </select>
                    </label>

                    <div class="col-lg-6 tester">
                        <!--Search box-->
                        <label for="searchInputBox" style="white-space: nowrap">
                            Search<span class="shrink">
                                @if (TempData["Role"] != null && (string)TempData["Role"] == "Admin")
                                {<span>Document Id/</span>}
                                Description
                            </span>: <input id="searchInputBox" type="search" name="searchTerm" />
                        </label>
                    </div>
                    <div class="right-form-side col-lg-2 buttondiv">
                        <!--Submit Button-->
                        <input class="button" id="formSubmitId" type="submit" value="Search" />
                    </div>
                </div>
            </div>
        </div>

    </form>
    @if (TempData["Role"] != null && (string)TempData["Role"] == "Admin")
    {
        <!--This form is hidden and only called from AdminOptions-->
        using (Html.BeginForm("DownloadAllDocuments", "Admin", FormMethod.Get, new { id = "downloadForm" }))
        {
            @Html.TextBox("ClientId", TempData["Client_Id"]);
            <input type="submit" value="Submit" id="downloadAllDocumentSubmit" />
        }
    }

</div>